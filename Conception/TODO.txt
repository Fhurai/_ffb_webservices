** Fonctionalités **

Coté back
. A l'insertion, vérification que toutes les associations existent. Si elles n'existent pas, créer les objets des associations.
. A l'insertion, vérification que toutes les relations ont leurs personnages dans l'ordre alphabétique et si elles le sont, vérification que la relation n'existe pas déjà en base.
. Check lien à l'insertion et si existe dans bdd, n'insert pas la fanfiction.
. Si tags contiennent "Sexual content" -> rating auto à 4.
    . Avertissement que le rating de FFB est différent de celui des sites de fanfictions pour correspondre aux thèmes proposées par les histoires.
. Si un personnage, ayant des relations, est modifié alors toutes ses relations sont aussi modifiées pour faire correspondre le nouveau nom.
. Si user n'est pas admin, il peut seulement faire de la consultation.
. Possibilité  de lier deux utilisateurs ensemble pour changer d'utilisateur (non-admin <-> admin en cas de modification à faire).
. Permettre de faire des requêtes personnalisées sur les stats
    . Exemple : savoir quels auteurs ont écrit sur Xenoblade 2 et Xenoblade 3 ou sur Xenoblade 1 et Xenoblade 3.

Coté front
. Pouvoir rajouter un tag à la volée (ajout avec un +, grouper les tags par "type" ?)
. Pouvoir créer toutes les relations possibles de la liste des personnages (et ainsi permettre l'ajout à la volée)
. Pouvoir lister toutes les fanfictions qui ont le même titre pour permettre le rajout de lien si elle se trouve aussi sur un autre site web.
. View avec toutes les fanfictions ayant le meme nom pour comparer les auteurs et savoir si l'auteur n'a pas deux pseudos différents sur deux sites (UltraPop / Utra-Pop).
. Consultation des informations d'une fanfiction ou d'une série, même déconnecté (utilisateur "guest" ou webservice sans connexion ?)
. Page qui transforme le code source d'une page fanfiction en formulaire pré-rempli ?

Coté outils
. Vérification existence en bdd pour author, langage fandom, character, relation, tag, link, fanfiction [titre + auteur], series
. Vérification aucun fanfiction a un lien inconnu pour author, character, relation -> Possible ?

** SQL **
. Un compte SQL pour tests, un compte pour stats & un compte pour main.
. Triggers pour remplir la table users_actions sur main.

** Code **

. De base, seuls admin & guest de créés comme utilisateur. 
    . Si un troisieme utilisateur manquant, redirection vers page de création d'un utilisateur.
    . Admin reste pour avoir un accès sans avoir à demander un password à l'utilisateur distant.
. Trois connexions différentes : une à la base de stats, une à la base de tests, une à la base de prod.
. Identifiants bdd dans un fichier gitignored avec idenfiants des trois bdd dans un seul fichier.
. Reset bdd tests avant lancement tests
    . Copie prod ou nouveau script pour init la base de tests ?
. Planification des tests
    . Test solo
    . Suite de tests pour classe
    . Enchainer les suites de tests (pas en meme temps pour éviter collisions).
. Prévoir CORS bypass pour webservices.
. Plan for CRUD
    . Read (Object without associations, with simple associations, with every associations)
        . GET
    . Search ([Array conditions, String order, Array filter [limit, offset]])
        . Voir si search() peut appeler search() d'une association.
        . GET
    . List (webservice appelle search() method ? Ou list() method ?)
        . search -> Par défaut, une taille de 25 éléments dans la liste même si permission d'aller jusqu'à un nombre max beaucoup plus grand (25 ? 50 ? 100 ? -> En fonction des objets manipulés)
        . GET
        . GET /fandoms/{fandomId}/fanfictions => Fanfictions du fandom fandomId
        . /api/fanfictions?limit=100&offset=0
        . /api/fanfictions?startDate={date}&endDate={date}
    . New (Empty object with id 0)
        . GET
    . Create (Object > Associations)
        . POST
    . Delete (Suppression logique, delete_date mis à CURRENT_DATE)
        . PUT / PATCH
    . Restore (delete_date mise à null)
        . PUT / PATCH
    . Remove (Suppression physique, nécessite l'objet d'avoir été delete précédemment)
        . DELETE
    . Update (Object > Links, jamais les objets associés)
        . PUT / PATCH